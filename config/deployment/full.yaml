apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ghops
    control-plane: controller-manager
  name: ghops-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: deploykeys.auth.github.odit.services
spec:
  group: auth.github.odit.services
  names:
    kind: DeployKey
    listKind: DeployKeyList
    plural: deploykeys
    singular: deploykey
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DeployKey is the Schema for the deploykeys API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DeployKeySpec defines the desired state of DeployKey.
            properties:
              keyType:
                default: ed25519
                description: |-
                  KeyType defines the type of SSH key to generate.
                  Supported values: "ed25519", "rsa"
                enum:
                - ed25519
                - rsa
                type: string
              owner:
                description: |-
                  Owner is the name of the owner (user or org) who owns the repository.
                  Example: "odit-services"
                maxLength: 255
                minLength: 1
                type: string
              permission:
                default: read-only
                description: Permission defines the permission level for the deploy
                  key.
                enum:
                - read-only
                - read-write
                type: string
              repository:
                description: |-
                  Repository is the name of the repository to which this deploy key applies.
                  Example: "ghops"
                maxLength: 255
                minLength: 1
                type: string
              title:
                default: Generated by GHOps
                maxLength: 255
                minLength: 1
                type: string
            required:
            - owner
            - permission
            - repository
            type: object
          status:
            description: DeployKeyStatus defines the observed state of DeployKey.
            properties:
              created:
                type: boolean
              currentRetries:
                type: integer
              githubKeyID:
                format: int64
                type: integer
              lastAction:
                type: string
              lastMessage:
                type: string
              lastReconcileTime:
                type: string
              secretRef:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ghops
  name: ghops-controller-manager
  namespace: ghops-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ghops
  name: ghops-leader-election-role
  namespace: ghops-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ghops
  name: ghops-deploykey-admin-role
rules:
- apiGroups:
  - auth.github.odit.services
  resources:
  - deploykeys
  verbs:
  - '*'
- apiGroups:
  - auth.github.odit.services
  resources:
  - deploykeys/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ghops
  name: ghops-deploykey-editor-role
rules:
- apiGroups:
  - auth.github.odit.services
  resources:
  - deploykeys
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - auth.github.odit.services
  resources:
  - deploykeys/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ghops
  name: ghops-deploykey-viewer-role
rules:
- apiGroups:
  - auth.github.odit.services
  resources:
  - deploykeys
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - auth.github.odit.services
  resources:
  - deploykeys/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ghops-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - auth.github.odit.services
  resources:
  - deploykeys
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - auth.github.odit.services
  resources:
  - deploykeys/finalizers
  verbs:
  - update
- apiGroups:
  - auth.github.odit.services
  resources:
  - deploykeys/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ghops-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ghops-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ghops
  name: ghops-leader-election-rolebinding
  namespace: ghops-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ghops-leader-election-role
subjects:
- kind: ServiceAccount
  name: ghops-controller-manager
  namespace: ghops-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ghops
  name: ghops-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ghops-manager-role
subjects:
- kind: ServiceAccount
  name: ghops-controller-manager
  namespace: ghops-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ghops-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ghops-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: ghops-controller-manager
  namespace: ghops-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ghops
    control-plane: controller-manager
  name: ghops-controller-manager-metrics-service
  namespace: ghops-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/name: ghops
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: ghops
    control-plane: controller-manager
  name: ghops-controller-manager
  namespace: ghops-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ghops
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: ghops
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        envFrom:
        - secretRef:
            name: ghops
        image: ghcr.io/odit-services/ghops:v0.3.2
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports: []
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts: []
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: ghops-controller-manager
      terminationGracePeriodSeconds: 10
      volumes: []
